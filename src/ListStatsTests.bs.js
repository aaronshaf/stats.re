// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List      = require("bs-platform/lib/js/list.js");
var ListStats = require("./ListStats.bs.js");

var result = ListStats.max(/* :: */[
      1.2,
      /* :: */[
        2.3,
        /* :: */[
          3.4,
          /* :: */[
            4.5,
            /* [] */0
          ]
        ]
      ]
    ]);

var max_result_001 = +(result === 4.5);

var max_result = /* tuple */[
  "ListStats.max",
  max_result_001,
  4.5,
  result
];

var result$1 = ListStats.min(/* :: */[
      1.2,
      /* :: */[
        2.3,
        /* :: */[
          3.4,
          /* :: */[
            4.5,
            /* [] */0
          ]
        ]
      ]
    ]);

var min_result_001 = +(result$1 === 1.2);

var min_result = /* tuple */[
  "ListStats.min",
  min_result_001,
  1.2,
  result$1
];

var result$2 = ListStats.product(/* :: */[
      1.2,
      /* :: */[
        2.3,
        /* :: */[
          3.4,
          /* :: */[
            4.5,
            /* [] */0
          ]
        ]
      ]
    ]);

var product_result_001 = +(result$2 === 42.227999999999994);

var product_result = /* tuple */[
  "ListStats.product",
  product_result_001,
  42.227999999999994,
  result$2
];

var result$3 = ListStats.sum(/* :: */[
      1.2,
      /* :: */[
        2.3,
        /* :: */[
          3.4,
          /* :: */[
            4.5,
            /* [] */0
          ]
        ]
      ]
    ]);

var sum_result_001 = +(result$3 === 11.4);

var sum_result = /* tuple */[
  "ListStats.sum",
  sum_result_001,
  11.4,
  result$3
];

var result$4 = ListStats.sum_simple(/* :: */[
      1.2,
      /* :: */[
        2.3,
        /* :: */[
          3.4,
          /* :: */[
            4.5,
            /* [] */0
          ]
        ]
      ]
    ]);

var sum_simple_result_001 = +(result$4 === 11.4);

var sum_simple_result = /* tuple */[
  "ListStats.sum_simple",
  sum_simple_result_001,
  11.4,
  result$4
];

var result$5 = ListStats.mean(/* :: */[
      1.2,
      /* :: */[
        2.3,
        /* :: */[
          3.4,
          /* :: */[
            4.5,
            /* [] */0
          ]
        ]
      ]
    ]);

var mean_result1_001 = +(result$5 === 2.85);

var mean_result1 = /* tuple */[
  "ListStats.mean",
  mean_result1_001,
  2.85,
  result$5
];

var result$6 = ListStats.quantile_sorted(0, /* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          2,
          /* :: */[
            3,
            /* :: */[
              4,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var quantile_sorted_result1_001 = +(result$6 === 0);

var quantile_sorted_result1 = /* tuple */[
  "ListStats.quantile_sorted (0.)",
  quantile_sorted_result1_001,
  0,
  result$6
];

var result$7 = ListStats.quantile_sorted(0.25, /* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          2,
          /* :: */[
            3,
            /* :: */[
              4,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var quantile_sorted_result2_001 = +(result$7 === 1);

var quantile_sorted_result2 = /* tuple */[
  "ListStats.quantile_sorted (0.25)",
  quantile_sorted_result2_001,
  1,
  result$7
];

var result$8 = ListStats.quantile_sorted(0.5, /* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          2,
          /* :: */[
            3,
            /* :: */[
              4,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var quantile_sorted_result3_001 = +(result$8 === 2);

var quantile_sorted_result3 = /* tuple */[
  "ListStats.quantile_sorted (0.5)",
  quantile_sorted_result3_001,
  2,
  result$8
];

var result$9 = ListStats.quantile_sorted(0.75, /* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          2,
          /* :: */[
            3,
            /* :: */[
              4,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var quantile_sorted_result4_001 = +(result$9 === 3);

var quantile_sorted_result4 = /* tuple */[
  "ListStats.quantile_sorted (0.75)",
  quantile_sorted_result4_001,
  3,
  result$9
];

var result$10 = ListStats.quantile_sorted(1, /* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          2,
          /* :: */[
            3,
            /* :: */[
              4,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var quantile_sorted_result5_001 = +(result$10 === 4);

var quantile_sorted_result5 = /* tuple */[
  "ListStats.quantile_sorted (1.)",
  quantile_sorted_result5_001,
  4,
  result$10
];

var result$11 = ListStats.quantile(0.75, /* :: */[
      3,
      /* :: */[
        0,
        /* :: */[
          1,
          /* :: */[
            2,
            /* :: */[
              4,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var quantile_result_001 = +(result$11 === 3);

var quantile_result = /* tuple */[
  "ListStats.quantile",
  quantile_result_001,
  3,
  result$11
];

var result$12 = ListStats.interquartile_range(/* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          2,
          /* :: */[
            4,
            /* [] */0
          ]
        ]
      ]
    ]);

var interquartile_range_result_001 = +(result$12 === 2);

var interquartile_range_result = /* tuple */[
  "ListStats.interquartile_range",
  interquartile_range_result_001,
  2,
  result$12
];

var result$13 = ListStats.median(/* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          2,
          /* :: */[
            3,
            /* :: */[
              4,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var median_result_001 = +(result$13 === 2);

var median_result = /* tuple */[
  "ListStats.median",
  median_result_001,
  2,
  result$13
];

var result$14 = ListStats.root_mean_square(/* :: */[
      -1,
      /* :: */[
        1,
        /* :: */[
          -1,
          /* :: */[
            1,
            /* [] */0
          ]
        ]
      ]
    ]);

var root_mean_square_result_001 = +(result$14 === 1);

var root_mean_square_result = /* tuple */[
  "ListStats.root_mean_square",
  root_mean_square_result_001,
  1,
  result$14
];

var result$15 = ListStats.min_sorted(/* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          2,
          /* :: */[
            3,
            /* :: */[
              4,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var min_sorted_result_001 = +(result$15 === 0);

var min_sorted_result = /* tuple */[
  "ListStats.min_sorted",
  min_sorted_result_001,
  0,
  result$15
];

var result$16 = ListStats.variance(/* :: */[
      1,
      /* :: */[
        2,
        /* :: */[
          3,
          /* :: */[
            4,
            /* :: */[
              5,
              /* :: */[
                6,
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]);

var variance_result_001 = +(result$16 === 2.9166666666666665);

var variance_result = /* tuple */[
  "ListStats.min_sorted",
  variance_result_001,
  2.9166666666666665,
  result$16
];

var growthRates = /* :: */[
  1.80,
  /* :: */[
    1.166666,
    /* :: */[
      1.428571,
      /* [] */0
    ]
  ]
];

var expectation = List.fold_left((function (prev, rate) {
        return prev * rate;
      }), 1, growthRates);

var averageGrowth = ListStats.geometric_mean(growthRates);

var averageGrowthRates_001 = /* :: */[
  averageGrowth,
  /* :: */[
    averageGrowth,
    /* [] */0
  ]
];

var averageGrowthRates = /* :: */[
  averageGrowth,
  averageGrowthRates_001
];

var result$17 = List.fold_left((function (prev, rate) {
        return prev * rate;
      }), 1, averageGrowthRates);

var geometric_mean_result_001 = +(result$17 === expectation);

var geometric_mean_result = /* tuple */[
  "ListStats.geometric_mean",
  geometric_mean_result_001,
  expectation,
  result$17
];

var result$18 = ListStats.mode_sorted(/* :: */[
      1,
      /* :: */[
        2,
        /* :: */[
          2,
          /* :: */[
            3,
            /* :: */[
              3,
              /* :: */[
                3,
                /* :: */[
                  5,
                  /* :: */[
                    6,
                    /* [] */0
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var mode_sorted_result_001 = +(result$18 === 3);

var mode_sorted_result = /* tuple */[
  "ListStats.mode_sorted",
  mode_sorted_result_001,
  3,
  result$18
];

var result$19 = ListStats.mode_sorted(/* :: */[
      5,
      /* :: */[
        5,
        /* :: */[
          5,
          /* :: */[
            1,
            /* :: */[
              2,
              /* :: */[
                2,
                /* :: */[
                  3,
                  /* :: */[
                    1,
                    /* :: */[
                      3,
                      /* :: */[
                        3,
                        /* :: */[
                          5,
                          /* :: */[
                            6,
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var mode_result_001 = +(result$19 === 5);

var mode_result = /* tuple */[
  "ListStats.mode",
  mode_result_001,
  5,
  result$19
];

var result$20 = ListStats.harmonic_mean(/* :: */[
      2,
      /* :: */[
        3,
        /* [] */0
      ]
    ]);

var harmonic_mean_result_001 = +(result$20 === 2.4000000000000004);

var harmonic_mean_result = /* tuple */[
  "ListStats.harmonic_mean",
  harmonic_mean_result_001,
  2.4000000000000004,
  result$20
];

var result$21 = ListStats.sample_skewness(/* :: */[
      2,
      /* :: */[
        4,
        /* :: */[
          6,
          /* :: */[
            3,
            /* :: */[
              1,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var sample_skewness_result_001 = +(result$21 === 0.590128656384365);

var sample_skewness_result = /* tuple */[
  "ListStats.sample_skewness",
  sample_skewness_result_001,
  0.590128656384365,
  result$21
];

var result$22 = ListStats.sum_nth_power_deviations(/* :: */[
      1,
      /* :: */[
        3,
        /* :: */[
          5,
          /* [] */0
        ]
      ]
    ], 2);

var sum_nth_power_deviations_result_001 = +(result$22 === 8);

var sum_nth_power_deviations_result = /* tuple */[
  "ListStats.sum_nth_power_deviations",
  sum_nth_power_deviations_result_001,
  8,
  result$22
];

var result$23 = ListStats.sample_variance(/* :: */[
      1,
      /* :: */[
        2,
        /* :: */[
          3,
          /* :: */[
            4,
            /* :: */[
              5,
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var sample_variance_result_001 = +(result$23 === 2.5);

var sample_variance_result = /* tuple */[
  "ListStats.sample_variance",
  sample_variance_result_001,
  2.5,
  result$23
];

var result$24 = ListStats.standard_deviation(/* :: */[
      2,
      /* :: */[
        4,
        /* :: */[
          4,
          /* :: */[
            4,
            /* :: */[
              5,
              /* :: */[
                5,
                /* :: */[
                  7,
                  /* :: */[
                    9,
                    /* [] */0
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var standard_deviation_result_001 = +(result$24 === 2.138089935299395);

var standard_deviation_result = /* tuple */[
  "ListStats.standard_deviation",
  standard_deviation_result_001,
  2.138089935299395,
  result$24
];

exports.max_result                      = max_result;
exports.min_result                      = min_result;
exports.product_result                  = product_result;
exports.sum_result                      = sum_result;
exports.sum_simple_result               = sum_simple_result;
exports.mean_result1                    = mean_result1;
exports.quantile_sorted_result1         = quantile_sorted_result1;
exports.quantile_sorted_result2         = quantile_sorted_result2;
exports.quantile_sorted_result3         = quantile_sorted_result3;
exports.quantile_sorted_result4         = quantile_sorted_result4;
exports.quantile_sorted_result5         = quantile_sorted_result5;
exports.quantile_result                 = quantile_result;
exports.interquartile_range_result      = interquartile_range_result;
exports.median_result                   = median_result;
exports.root_mean_square_result         = root_mean_square_result;
exports.min_sorted_result               = min_sorted_result;
exports.variance_result                 = variance_result;
exports.geometric_mean_result           = geometric_mean_result;
exports.mode_sorted_result              = mode_sorted_result;
exports.mode_result                     = mode_result;
exports.harmonic_mean_result            = harmonic_mean_result;
exports.sample_skewness_result          = sample_skewness_result;
exports.sum_nth_power_deviations_result = sum_nth_power_deviations_result;
exports.sample_variance_result          = sample_variance_result;
exports.standard_deviation_result       = standard_deviation_result;
/* result Not a pure module */
